angular.module("promiseTracker",[]).provider("promiseTracker",function(){var r={};this.$get=["$q","$timeout",function(e,n){function t(r){function t(r,e){angular.forEach(c[r],function(r){r.apply(i,e||[])})}function o(r){function o(r){return function(e){i.minPromise.then(function(){t("done",[e,r]),t(r?"error":"success",[e]);var o=a.indexOf(c);a.splice(o,1),0===a.length&&i.maxPromise&&n.cancel(i.maxPromise)})}}var c=e.defer();return a.push(c),t("start",[r]),1==a.length&&(i.minPromise=i._minDuration?n(angular.noop,i._minDuration):e.when(!0),i._maxDuration&&(i.maxPromise=n(c.resolve,i._maxDuration))),c.promise.then(o(!1),o(!0)),c}r=r||{};var i=this,c={start:[],done:[],error:[],success:[]},a=[];i.setMinDuration=function(r){i._minDuration=r},i.setMinDuration(r.minDuration),i.setMaxDuration=function(r){i._maxDuration=r},i.setMaxDuration(r.maxDuration),i.active=function(){return a.length>0},i.cancel=function(){angular.forEach(a,function(r){r.resolve()})},i.addPromise=function(r,n){var t=o(n);return r.then(function(r){return t.resolve(r),r},function(r){return t.reject(r),e.reject(r)}),t},i.createPromise=function(r){return o(r)},i.on=i.bind=function(r,e){if(!c[r])throw"Cannot create callback for event '"+r+"'. Allowed types: 'start', 'done', 'error', 'success'";return c[r].push(e),i},i.off=i.unbind=function(r,e){if(!c[r])throw"Cannot create callback for event '"+r+"'. Allowed types: 'start', 'done', 'error', 'success'";if(e){var n=c[r].indexOf(e);c[r].splice(n,1)}else c[r].length=0;return i}}return function(e,n){return r[e]||(r[e]=new t(n)),r[e]}}]}).config(["$httpProvider",function(r){r.interceptors?r.interceptors.push("trackerHttpInterceptor"):r.responseInterceptors.push("trackerResponseInterceptor")}]).factory("trackerResponseInterceptor",["$q","promiseTracker","$injector",function(r,e,n){var t;return function(r){t||(t=n.get("$http"));var o=t.pendingRequests[t.pendingRequests.length-1];return o.tracker&&e(o.tracker).addPromise(r,o),r}}]).factory("trackerHttpInterceptor",["$q","promiseTracker","$injector",function(r,e){return{request:function(n){if(n.tracker){var t=e(n.tracker).createPromise(n);n.$promiseTrackerDeferred=t}return r.when(n)},response:function(e){return e.config.$promiseTrackerDeferred&&e.config.$promiseTrackerDeferred.resolve(e),r.when(e)},responseError:function(e){return e.config.$promiseTrackerDeferred&&e.config.$promiseTrackerDeferred.reject(e),r.reject(e)}}}]);